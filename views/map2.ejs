<!DOCTYPE html>
<html>
  <head>
    <title>Geocoding service</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <script src="/jquery-3.1.1.min.js"></script>
    <link rel="stylesheet" href="/bootstrap.min.css">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */

      #map {
        width:100%;
        height: 500px;
      }
      /* Optional: Makes the sample page fill the window. */
        html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
      }

      #infowindow-content .title {
        font-weight: bold;
      }

      #infowindow-content {
        display: none;
      }

      #map #infowindow-content {
        display: inline;
      }

      .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
      }

      #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
      }

      .pac-controls {
        display: inline-block;
        padding: 5px 11px;
      }

      .pac-controls label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
      }
      #target {
        width: 345px;
      }
    </style>
  </head>
  <body>
    <div class="row">
    <div class="col-md-7">
    <input type="textbox" id="txt" placeholder="Your Address Will be Display Here" class="form-control" readonly><br>
    </div>
    <div class="col-md-3"></div>
      <div class="col-md-7">
      <center><input id="address" class="controls form-control" type="text" placeholder="Search Box"></center>
      <center><button id="submit" class="btn btn-success" class="form-control">Search</button></center>
      </div>
    </div>
    <!--<center><input id="address" class="controls form-control" type="text" placeholder="Search Box"></center>-->
    <div id="map"></div>
    <script>
      // var globalMap;



      function initMap() {


        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 4,
          center: {lat: 22.5726, lng: 88.3639}
        });
        var geocoder = new google.maps.Geocoder();
        /*var input = document.getElementById('address');
          var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }
        })*/  
        document.getElementById('submit').addEventListener('click', function() {
        geocodeAddress(geocoder, map);
        });
        document.getElementById('address').addEventListener('keyup', function(e) {
          if (e.keyCode == 13) { 
             //geocodeAddress(geocoder, map);
             $("#submit").trigger("click");
           }
        });
      }

      function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('address').value;
        geocoder.geocode({'address': address}, function(results, status) {
          if (status === 'OK') {
            resultsMap.setCenter(results[0].geometry.location);
            var marker = new google.maps.Marker({
              map: resultsMap,
              draggable:true, 
              //title:"Drag Me",
              animation: google.maps.Animation.DROP,
              position: results[0].geometry.location
            });
            } else {
            alert('Wrong input \n Geocode was not successful for the following reason: ' + status);
          }
            //console.log(marker);
            google.maps.event.addListener(marker, 'dragend', function() {
            geocoder.geocode({
              latLng: marker.getPosition()
            }, function(responses) {
              if (responses && responses.length > 0) {
                marker.formatted_address = responses[0].formatted_address;

              } else {
                marker.formatted_address = 'Cannot determine address at this location.';
              }
              //console.log(marker.formatted_address);
              //marker.title=marker.formatted_address;
              $("#txt").val(marker.formatted_address);
              
            });
          
        });
            google.maps.event.addListener(marker, 'click', function() {
            geocoder.geocode({
              latLng: marker.getPosition()
            }, function(responses) {
              if (responses && responses.length > 0) {
                marker.formatted_address = responses[0].formatted_address;

              } else {
                marker.formatted_address = 'Cannot determine address at this location.';
              }
              //console.log(marker.formatted_address);
              //marker.title=marker.formatted_address;
              $("#txt").val(marker.formatted_address);
              
            });
          
        });
      })
    }
      
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBhcBj8QN9RqeG8cRNa5XscyeUnS9APgwo&libraries=places&callback=initMap">
    </script>
  </body>
</html>
    
